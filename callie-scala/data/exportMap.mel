proc export( string $mesh, string $filename ){

	$file = `fopen $filename "w"`;

	// vertex
	int $vertexCount[] = `polyEvaluate -v $mesh`;
	//fprint $file ( "numVertices=" + $vertexCount[0] + "\n" );
	fprint $file ( "[" );

	for( $i=0;$i<$vertexCount[0];$i++){
		float $vert[]   = `getAttr ($mesh+".vt["+$i+"]")`;
		float $offset[] = `getAttr ($mesh+".pt["+$i+"]")`;

		$vert[0] += $offset[0];
		$vert[1] += $offset[1];
		$vert[2] += $offset[2];


		fprint $file ( "\t("+$vert[0]+","+$vert[1]+","+$vert[2]+")" );

		if($i+1<$vertexCount[0]){
		    fprint $file ( ",\n" );
		}
	}
	fprint $file "\n]\n";

	// faces

	select -r $mesh;
	int $faceCount[] = `polyEvaluate -f`;
	//fprint $file ( "numFaces=" + $faceCount[0]+"\n" );
	fprint $file ( "{\n" );

	for( $i=0;$i<$faceCount[0];$i++){
		select -r ( $mesh+".f["+$i+"]");
		
		string $vinds[] = `polyInfo -fv`;
		
		string $split[];
		tokenize $vinds[0] $split;

		fprint $file "\t(";
		for($j=0;$j<(size($split)-2);$j++){
		    if( $j != 0 ){
        	    fprint $file (",");
            }

			fprint $file ( $split[(2+$j)] );
		}

        fprint $file ")";
		if($i + 1 <  $faceCount[0]){
            fprint $file (",");
        }
		fprint $file "\n";

	}	
	fprint $file "}\n";

	
	fclose $file;
}

export("pCylinder30", "C:/Users/root/IdeaProjects/callie/callie-scala/data/map/floorMap.mod");
